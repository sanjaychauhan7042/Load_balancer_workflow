name: Load Balancer Setup

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup-load-balancer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Set up Load Balancer
        run: |
          # Define variables
          LB_NAME="my-load-balancer"
          TARGET_GROUP_NAME="my-target-group"
          VPC_ID="vpc-046956f6b3f1225e2"
          SUBNET_IDS=$(aws ec2 describe-subnets --filters Name=vpc-id,Values=$VPC_ID --query "Subnets[*].SubnetId" --output text)
          INSTANCE_IDS=$(aws ec2 describe-instances --filters "Name=instance-state-name,Values=running" "Name=vpc-id,Values=$VPC_ID" --query "Reservations[*].Instances[*].InstanceId" --output text)
          
          # Create Load Balancer
          LB_ARN=$(aws elbv2 create-load-balancer \
            --name $LB_NAME \
            --subnets $SUBNET_IDS \
            --security-groups $(aws ec2 describe-security-groups --filters Name=vpc-id,Values=$VPC_ID --query "SecurityGroups[0].GroupId" --output text) \
            --query "LoadBalancers[0].LoadBalancerArn" --output text)
          echo "Load Balancer ARN: $LB_ARN"
          
          # Create Target Group
          TG_ARN=$(aws elbv2 create-target-group \
            --name $TARGET_GROUP_NAME \
            --protocol HTTP \
            --port 80 \
            --vpc-id vpc-046956f6b3f1225e2 \
            --health-check-protocol HTTP \
            --health-check-path / \
            --health-check-interval-seconds 30 \
            --query "TargetGroups[0].TargetGroupArn" \
            --output text)
          echo "Target Group ARN: $TG_ARN"

          # Register Targets (Instances)
          for INSTANCE_ID in $INSTANCE_IDS; do
            aws elbv2 register-targets \
              --target-group-arn $TG_ARN \
              --targets Id=$INSTANCE_ID
          done

          # Create Listener for Load Balancer
          aws elbv2 create-listener \
            --load-balancer-arn $LB_ARN \
            --protocol HTTP \
            --port 80 \
            --default-actions Type=forward,TargetGroupArn=$TG_ARN
          
      - name: Verify Load Balancer
        run: |
          aws elbv2 describe-load-balancers --names $LB_NAME
          aws elbv2 describe-target-health --target-group-arn $TG_ARN
